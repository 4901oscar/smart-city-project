version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # PostgreSQL local deshabilitado - usando Neon Cloud
  # Si quieres usar PostgreSQL local, descomenta este bloque
  #postgres:
  #  image: postgres:15
  #  container_name: postgres
  #  restart: always
  #  environment:
  #    POSTGRES_DB: SmartCitiesBD
  #    POSTGRES_USER: postgres
  #    POSTGRES_PASSWORD: supersecretpassword
  #  ports:
  #    - "5432:5432"
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
  #  command: -c ssl=off

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "5000:8080"
    depends_on:
      - kafka
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=${PGHOST};Database=${PGDATABASE};Username=${PGUSER};Password=${PGPASSWORD};SSL Mode=Require;Timeout=15;Command Timeout=30"
      Kafka__BootstrapServers: kafka:29092
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.3
    container_name: es
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -s -u elastic:changeme123 http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme123
    ports:
      - "5601:5601"

# Vol√∫menes persistentes
volumes:
  esdata:
    driver: "local"
# Volumen para PostgreSQL local (deshabilitado)
#volumes:
#  postgres_data: